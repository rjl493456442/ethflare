// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package cluster

import (
	"github.com/ethereum/go-ethereum/log"
)

// MarshalTOML marshals as TOML.
func (c Config) MarshalTOML() (interface{}, error) {
	type Config struct {
		Datadir  string
		HTTPHost string `toml:",omitempty"`
		HTTPPort int    `toml:",omitempty"`
		Nodes    []NodeConfig
		Log      log.Logger `toml:"-"`
	}
	var enc Config
	enc.Datadir = c.Datadir
	enc.HTTPHost = c.HTTPHost
	enc.HTTPPort = c.HTTPPort
	enc.Nodes = c.Nodes
	enc.Log = c.Log
	return &enc, nil
}

// UnmarshalTOML unmarshals from TOML.
func (c *Config) UnmarshalTOML(unmarshal func(interface{}) error) error {
	type Config struct {
		Datadir  *string
		HTTPHost *string `toml:",omitempty"`
		HTTPPort *int    `toml:",omitempty"`
		Nodes    []NodeConfig
		Log      log.Logger `toml:"-"`
	}
	var dec Config
	if err := unmarshal(&dec); err != nil {
		return err
	}
	if dec.Datadir != nil {
		c.Datadir = *dec.Datadir
	}
	if dec.HTTPHost != nil {
		c.HTTPHost = *dec.HTTPHost
	}
	if dec.HTTPPort != nil {
		c.HTTPPort = *dec.HTTPPort
	}
	if dec.Nodes != nil {
		c.Nodes = dec.Nodes
	}
	if dec.Log != nil {
		c.Log = dec.Log
	}
	return nil
}
